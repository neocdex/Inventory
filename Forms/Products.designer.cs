//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace Inventory.ORMDataModel {

	[Persistent(@"products")]
	public partial class Products : XPLiteObject {
		int fproduct_id;
		[Key(true)]
		public int product_id {
			get { return fproduct_id; }
			set { SetPropertyValue<int>("product_id", ref fproduct_id, value); }
		}
		string fname;
		[Size(255)]
		public string name {
			get { return fname; }
			set { SetPropertyValue<string>("name", ref fname, value); }
		}
		string fdescription;
		[Size(510)]
		public string description {
			get { return fdescription; }
			set { SetPropertyValue<string>("description", ref fdescription, value); }
		}
		string fserialnumber;
		public string serialnumber {
			get { return fserialnumber; }
			set { SetPropertyValue<string>("serialnumber", ref fserialnumber, value); }
		}
		bool fdiscontinued;
		public bool discontinued {
			get { return fdiscontinued; }
			set { SetPropertyValue<bool>("discontinued", ref fdiscontinued, value); }
		}
		DateTime fdiscontinued_date;
		public DateTime discontinued_date {
			get { return fdiscontinued_date; }
			set { SetPropertyValue<DateTime>("discontinued_date", ref fdiscontinued_date, value); }
		}
		double fweight;
		public double weight {
			get { return fweight; }
			set { SetPropertyValue<double>("weight", ref fweight, value); }
		}
		byte[] fpicture;
		[Size(SizeAttribute.Unlimited)]
		public byte[] picture {
			get { return fpicture; }
			set { SetPropertyValue<byte[]>("picture", ref fpicture, value); }
		}
		Category fcategory_id;
		[Association(@"ProductsReferencesCategory")]
		public Category category_id {
			get { return fcategory_id; }
			set { SetPropertyValue<Category>("category_id", ref fcategory_id, value); }
		}
		Brand fbrand_id;
		[Association(@"ProductsReferencesBrand")]
		public Brand brand_id {
			get { return fbrand_id; }
			set { SetPropertyValue<Brand>("brand_id", ref fbrand_id, value); }
		}
		Unitofmeasure fuom_id;
		[Association(@"ProductsReferencesUnitofmeasure")]
		public Unitofmeasure uom_id {
			get { return fuom_id; }
			set { SetPropertyValue<Unitofmeasure>("uom_id", ref fuom_id, value); }
		}
		Suppliers fsupplier_id;
		[Association(@"ProductsReferencesSuppliers")]
		public Suppliers supplier_id {
			get { return fsupplier_id; }
			set { SetPropertyValue<Suppliers>("supplier_id", ref fsupplier_id, value); }
		}
		string flote;
		[Size(20)]
		public string lote {
			get { return flote; }
			set { SetPropertyValue<string>("lote", ref flote, value); }
		}
		[Association(@"InventorytransactionReferencesProducts", typeof(Inventorytransaction))]
		public XPCollection<Inventorytransaction> Inventorytransactions { get { return GetCollection<Inventorytransaction>("Inventorytransactions"); } }
		[Association(@"PurchaseorderdetailsReferencesProducts", typeof(Purchaseorderdetails))]
		public XPCollection<Purchaseorderdetails> PurchaseorderdetailsCollection { get { return GetCollection<Purchaseorderdetails>("PurchaseorderdetailsCollection"); } }
		[Association(@"StoredReferencesProducts", typeof(Stored))]
		public XPCollection<Stored> Storeds { get { return GetCollection<Stored>("Storeds"); } }
	}

}
